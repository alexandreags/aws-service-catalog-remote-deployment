AWSTemplateFormatVersion: '2010-09-09'
Description: "Stack para criar os recursos necessarios da solucao de Remote Deployment do Service Catalog. 
https://github.com/alexandreags/aws-service-catalog-remote-deployment"
Transform: AWS::LanguageExtensions
Parameters:
  IdDeployAccount:
    Type: String
    Description: "ID da conta de Deployment"
    ConstraintDescription: Preencher o Id corretamente.
    AllowedPattern: '^\d{12}$'
  IdOrganization:
    Type: String
    Description: "ID da Organization"
    ConstraintDescription: Preencher o Id corretamente.
    AllowedPattern: 'o-[a-z0-9]{10,32}'
  CodeRepositoryBucket:
    Type: String
    Description: "Bucket com os artefatos do deployment. Se tiver prefixo incluir, ex mybucket/caminho"
    ConstraintDescription: Bucket Obrigatorio.
    AllowedPattern: 'o-[a-z0-9]{10,32}'
Resources:
  SCRemoteOrgEnableRole:
        Type: AWS::IAM::Role
        Properties:
          AssumeRolePolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Principal:
                  Service:
                    - lambda.amazonaws.com
                Action: sts:AssumeRole
          ManagedPolicyArns:
            - !Ref SCRemoteOrgEnablePolicy
  SCRemoteOrgEnablePolicy:
        Type: AWS::IAM::ManagedPolicy
        Properties:
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*:*:*"
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: 
                  - '*'
              - Effect: Allow
                Action:
                  - organizations:*
                  - cloudformation:*
                Resource:
                  - '*'
  SCRemoteOrgEnableLambdaFunction:
        Type: AWS::Lambda::Function
        Properties:
          Handler: index.lambda_handler
          Timeout: 600
          FunctionName: !Join ['-', ['SCRemoteOrgEnableLambdaFunction',!Ref AWS::AccountId]]
          Role: !GetAtt SCRemoteOrgEnableRole.Arn
          Runtime: python3.9
          Code:
            S3Bucket: !Ref CodeRepositoryBucket
            S3Key: setup-access-accounts-function.zip
          Environment:
            Variables:
              ORGANIZATION_ID: !Ref IdOrganization
              DEPLOY_ACCOUNT_ID: !Ref IdDeployAccount
  TriggerInitialization:
          Type: Custom::InitializeDeploy
          Properties:
            ServiceToken: !GetAtt SCRemoteOrgEnableLambdaFunction.Arn
